# -*- coding: utf-8 -*-
"""LinearRegressionAlgorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1igqYRVwLQ6wxBwGmXL_yh2Nitoyz3pFr
"""

import numpy as np
import matplotlib.pyplot as plt

#Linear Regression Algorithm

def estimate_b0_b1(x, y):
    n = np.size(x)

    # We obtain x & y mean
    m_x, m_y = np.mean(x), np.mean(y)

    # We calculate xy & xx sum
    sum_xy = np.sum((x-m_x)*(y-m_y))
    sum_xx = np.sum(x*(x-m_x))

    # Regression coeficient
    b_1 = sum_xy / sum_xx
    b_0 = m_y - b_1*m_x

    return(b_0, b_1)

# Graph Function
def plot_regression(x, y, b):
    plt.scatter(x, y, color = "r", marker = "o", s=30)

    y_pred = b[0] + b[1]*x
    plt.plot(x, y_pred, color = "b")

    #etiquetado
    plt.xlabel('x - Independent')
    plt.ylabel('y - Dependent')

    plt.show()

# Main code
def main():
    # Dataset
    x = np.array([1,2,3,4,5])
    y = np.array([2,3,5,6,5])

    # We obtain b1 & b2
    b = estimate_b0_b1(x, y)
    print("Values: b0 = {}, b1 ={}".format(b[0], b[1]))

    #Graficamos nuestra linea de regresion
    plot_regression(x, y, b)

if __name__== "__main__":
    main()

